// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh/v1alpha1/dataplane_insight.proto

package v1alpha1

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DataplaneInsight defines the observed state of a Dataplane.
type DataplaneInsight struct {
	// List of ADS subscriptions created by a given Dataplane.
	Subscriptions []*DiscoverySubscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// Insights about mTLS for Dataplane.
	MTLS                 *DataplaneInsight_MTLS `protobuf:"bytes,2,opt,name=mTLS,proto3" json:"mTLS,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DataplaneInsight) Reset()         { *m = DataplaneInsight{} }
func (m *DataplaneInsight) String() string { return proto.CompactTextString(m) }
func (*DataplaneInsight) ProtoMessage()    {}
func (*DataplaneInsight) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{0}
}

func (m *DataplaneInsight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataplaneInsight.Unmarshal(m, b)
}
func (m *DataplaneInsight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataplaneInsight.Marshal(b, m, deterministic)
}
func (m *DataplaneInsight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataplaneInsight.Merge(m, src)
}
func (m *DataplaneInsight) XXX_Size() int {
	return xxx_messageInfo_DataplaneInsight.Size(m)
}
func (m *DataplaneInsight) XXX_DiscardUnknown() {
	xxx_messageInfo_DataplaneInsight.DiscardUnknown(m)
}

var xxx_messageInfo_DataplaneInsight proto.InternalMessageInfo

func (m *DataplaneInsight) GetSubscriptions() []*DiscoverySubscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *DataplaneInsight) GetMTLS() *DataplaneInsight_MTLS {
	if m != nil {
		return m.MTLS
	}
	return nil
}

// MTLS defines insights for mTLS
type DataplaneInsight_MTLS struct {
	// Expiration time of the last certificate that was generated for a
	// Dataplane.
	CertificateExpirationTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=certificate_expiration_time,json=certificateExpirationTime,proto3" json:"certificate_expiration_time,omitempty"`
	// Time on which the last certificate was generated.
	LastCertificateRegeneration *timestamp.Timestamp `protobuf:"bytes,2,opt,name=last_certificate_regeneration,json=lastCertificateRegeneration,proto3" json:"last_certificate_regeneration,omitempty"`
	// Number of certificate regenerations for a Dataplane.
	CertificateRegenerations uint32   `protobuf:"varint,3,opt,name=certificate_regenerations,json=certificateRegenerations,proto3" json:"certificate_regenerations,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *DataplaneInsight_MTLS) Reset()         { *m = DataplaneInsight_MTLS{} }
func (m *DataplaneInsight_MTLS) String() string { return proto.CompactTextString(m) }
func (*DataplaneInsight_MTLS) ProtoMessage()    {}
func (*DataplaneInsight_MTLS) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{0, 0}
}

func (m *DataplaneInsight_MTLS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataplaneInsight_MTLS.Unmarshal(m, b)
}
func (m *DataplaneInsight_MTLS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataplaneInsight_MTLS.Marshal(b, m, deterministic)
}
func (m *DataplaneInsight_MTLS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataplaneInsight_MTLS.Merge(m, src)
}
func (m *DataplaneInsight_MTLS) XXX_Size() int {
	return xxx_messageInfo_DataplaneInsight_MTLS.Size(m)
}
func (m *DataplaneInsight_MTLS) XXX_DiscardUnknown() {
	xxx_messageInfo_DataplaneInsight_MTLS.DiscardUnknown(m)
}

var xxx_messageInfo_DataplaneInsight_MTLS proto.InternalMessageInfo

func (m *DataplaneInsight_MTLS) GetCertificateExpirationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CertificateExpirationTime
	}
	return nil
}

func (m *DataplaneInsight_MTLS) GetLastCertificateRegeneration() *timestamp.Timestamp {
	if m != nil {
		return m.LastCertificateRegeneration
	}
	return nil
}

func (m *DataplaneInsight_MTLS) GetCertificateRegenerations() uint32 {
	if m != nil {
		return m.CertificateRegenerations
	}
	return 0
}

// DiscoverySubscription describes a single ADS subscription
// created by a Dataplane to the Control Plane.
// Ideally, there should be only one such subscription per Dataplane lifecycle.
// Presence of multiple subscriptions might indicate one of the following
// events:
// - transient loss of network connection between Dataplane and Control Plane
// - Dataplane restart (i.e. hot restart or crash)
// - Control Plane restart (i.e. rolling update or crash)
// - etc
type DiscoverySubscription struct {
	// Unique id per ADS subscription.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Control Plane instance that handled given subscription.
	ControlPlaneInstanceId string `protobuf:"bytes,2,opt,name=control_plane_instance_id,json=controlPlaneInstanceId,proto3" json:"control_plane_instance_id,omitempty"`
	// Time when a given Dataplane connected to the Control Plane.
	ConnectTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=connect_time,json=connectTime,proto3" json:"connect_time,omitempty"`
	// Time when a given Dataplane disconnected from the Control Plane.
	DisconnectTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=disconnect_time,json=disconnectTime,proto3" json:"disconnect_time,omitempty"`
	// Status of the ADS subscription.
	Status *DiscoverySubscriptionStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Version of Envoy and Kuma dataplane
	Version              *Version `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverySubscription) Reset()         { *m = DiscoverySubscription{} }
func (m *DiscoverySubscription) String() string { return proto.CompactTextString(m) }
func (*DiscoverySubscription) ProtoMessage()    {}
func (*DiscoverySubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{1}
}

func (m *DiscoverySubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverySubscription.Unmarshal(m, b)
}
func (m *DiscoverySubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverySubscription.Marshal(b, m, deterministic)
}
func (m *DiscoverySubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverySubscription.Merge(m, src)
}
func (m *DiscoverySubscription) XXX_Size() int {
	return xxx_messageInfo_DiscoverySubscription.Size(m)
}
func (m *DiscoverySubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverySubscription.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverySubscription proto.InternalMessageInfo

func (m *DiscoverySubscription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DiscoverySubscription) GetControlPlaneInstanceId() string {
	if m != nil {
		return m.ControlPlaneInstanceId
	}
	return ""
}

func (m *DiscoverySubscription) GetConnectTime() *timestamp.Timestamp {
	if m != nil {
		return m.ConnectTime
	}
	return nil
}

func (m *DiscoverySubscription) GetDisconnectTime() *timestamp.Timestamp {
	if m != nil {
		return m.DisconnectTime
	}
	return nil
}

func (m *DiscoverySubscription) GetStatus() *DiscoverySubscriptionStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DiscoverySubscription) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

// DiscoverySubscriptionStatus defines status of an ADS subscription.
type DiscoverySubscriptionStatus struct {
	// Time when status of a given ADS subscription was most recently updated.
	LastUpdateTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	// Total defines an aggregate over individual xDS stats.
	Total *DiscoveryServiceStats `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
	// CDS defines all CDS stats.
	Cds *DiscoveryServiceStats `protobuf:"bytes,3,opt,name=cds,proto3" json:"cds,omitempty"`
	// EDS defines all EDS stats.
	Eds *DiscoveryServiceStats `protobuf:"bytes,4,opt,name=eds,proto3" json:"eds,omitempty"`
	// LDS defines all LDS stats.
	Lds *DiscoveryServiceStats `protobuf:"bytes,5,opt,name=lds,proto3" json:"lds,omitempty"`
	// RDS defines all RDS stats.
	Rds                  *DiscoveryServiceStats `protobuf:"bytes,6,opt,name=rds,proto3" json:"rds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DiscoverySubscriptionStatus) Reset()         { *m = DiscoverySubscriptionStatus{} }
func (m *DiscoverySubscriptionStatus) String() string { return proto.CompactTextString(m) }
func (*DiscoverySubscriptionStatus) ProtoMessage()    {}
func (*DiscoverySubscriptionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{2}
}

func (m *DiscoverySubscriptionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverySubscriptionStatus.Unmarshal(m, b)
}
func (m *DiscoverySubscriptionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverySubscriptionStatus.Marshal(b, m, deterministic)
}
func (m *DiscoverySubscriptionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverySubscriptionStatus.Merge(m, src)
}
func (m *DiscoverySubscriptionStatus) XXX_Size() int {
	return xxx_messageInfo_DiscoverySubscriptionStatus.Size(m)
}
func (m *DiscoverySubscriptionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverySubscriptionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverySubscriptionStatus proto.InternalMessageInfo

func (m *DiscoverySubscriptionStatus) GetLastUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdateTime
	}
	return nil
}

func (m *DiscoverySubscriptionStatus) GetTotal() *DiscoveryServiceStats {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *DiscoverySubscriptionStatus) GetCds() *DiscoveryServiceStats {
	if m != nil {
		return m.Cds
	}
	return nil
}

func (m *DiscoverySubscriptionStatus) GetEds() *DiscoveryServiceStats {
	if m != nil {
		return m.Eds
	}
	return nil
}

func (m *DiscoverySubscriptionStatus) GetLds() *DiscoveryServiceStats {
	if m != nil {
		return m.Lds
	}
	return nil
}

func (m *DiscoverySubscriptionStatus) GetRds() *DiscoveryServiceStats {
	if m != nil {
		return m.Rds
	}
	return nil
}

// DiscoveryServiceStats defines all stats over a single xDS service.
type DiscoveryServiceStats struct {
	// Number of xDS responses sent to the Dataplane.
	ResponsesSent uint64 `protobuf:"varint,1,opt,name=responses_sent,json=responsesSent,proto3" json:"responses_sent,omitempty"`
	// Number of xDS responses ACKed by the Dataplane.
	ResponsesAcknowledged uint64 `protobuf:"varint,2,opt,name=responses_acknowledged,json=responsesAcknowledged,proto3" json:"responses_acknowledged,omitempty"`
	// Number of xDS responses NACKed by the Dataplane.
	ResponsesRejected    uint64   `protobuf:"varint,3,opt,name=responses_rejected,json=responsesRejected,proto3" json:"responses_rejected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoveryServiceStats) Reset()         { *m = DiscoveryServiceStats{} }
func (m *DiscoveryServiceStats) String() string { return proto.CompactTextString(m) }
func (*DiscoveryServiceStats) ProtoMessage()    {}
func (*DiscoveryServiceStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{3}
}

func (m *DiscoveryServiceStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryServiceStats.Unmarshal(m, b)
}
func (m *DiscoveryServiceStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryServiceStats.Marshal(b, m, deterministic)
}
func (m *DiscoveryServiceStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryServiceStats.Merge(m, src)
}
func (m *DiscoveryServiceStats) XXX_Size() int {
	return xxx_messageInfo_DiscoveryServiceStats.Size(m)
}
func (m *DiscoveryServiceStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryServiceStats.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryServiceStats proto.InternalMessageInfo

func (m *DiscoveryServiceStats) GetResponsesSent() uint64 {
	if m != nil {
		return m.ResponsesSent
	}
	return 0
}

func (m *DiscoveryServiceStats) GetResponsesAcknowledged() uint64 {
	if m != nil {
		return m.ResponsesAcknowledged
	}
	return 0
}

func (m *DiscoveryServiceStats) GetResponsesRejected() uint64 {
	if m != nil {
		return m.ResponsesRejected
	}
	return 0
}

// Version defines version of Kuma Dataplane and Envoy
type Version struct {
	// Version of Kuma Dataplane
	KumaDp *KumaDpVersion `protobuf:"bytes,1,opt,name=kumaDp,proto3" json:"kumaDp,omitempty"`
	// Version of Envoy
	Envoy                *EnvoyVersion `protobuf:"bytes,2,opt,name=envoy,proto3" json:"envoy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{4}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetKumaDp() *KumaDpVersion {
	if m != nil {
		return m.KumaDp
	}
	return nil
}

func (m *Version) GetEnvoy() *EnvoyVersion {
	if m != nil {
		return m.Envoy
	}
	return nil
}

// KumaDpVersion describes details of Kuma Dataplane version
type KumaDpVersion struct {
	// Version number of Kuma Dataplane
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Git tag of Kuma Dataplane version
	GitTag string `protobuf:"bytes,2,opt,name=gitTag,proto3" json:"gitTag,omitempty"`
	// Git commit of Kuma Dataplane version
	GitCommit string `protobuf:"bytes,3,opt,name=gitCommit,proto3" json:"gitCommit,omitempty"`
	// Build date of Kuma Dataplane version
	BuildDate            string   `protobuf:"bytes,4,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KumaDpVersion) Reset()         { *m = KumaDpVersion{} }
func (m *KumaDpVersion) String() string { return proto.CompactTextString(m) }
func (*KumaDpVersion) ProtoMessage()    {}
func (*KumaDpVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{5}
}

func (m *KumaDpVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KumaDpVersion.Unmarshal(m, b)
}
func (m *KumaDpVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KumaDpVersion.Marshal(b, m, deterministic)
}
func (m *KumaDpVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KumaDpVersion.Merge(m, src)
}
func (m *KumaDpVersion) XXX_Size() int {
	return xxx_messageInfo_KumaDpVersion.Size(m)
}
func (m *KumaDpVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_KumaDpVersion.DiscardUnknown(m)
}

var xxx_messageInfo_KumaDpVersion proto.InternalMessageInfo

func (m *KumaDpVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *KumaDpVersion) GetGitTag() string {
	if m != nil {
		return m.GitTag
	}
	return ""
}

func (m *KumaDpVersion) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *KumaDpVersion) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

// EnvoyVersion describes details of Envoy version
type EnvoyVersion struct {
	// Version number of Envoy
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Full build tag of Envoy version
	Build                string   `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvoyVersion) Reset()         { *m = EnvoyVersion{} }
func (m *EnvoyVersion) String() string { return proto.CompactTextString(m) }
func (*EnvoyVersion) ProtoMessage()    {}
func (*EnvoyVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_35794f05b529b342, []int{6}
}

func (m *EnvoyVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvoyVersion.Unmarshal(m, b)
}
func (m *EnvoyVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvoyVersion.Marshal(b, m, deterministic)
}
func (m *EnvoyVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvoyVersion.Merge(m, src)
}
func (m *EnvoyVersion) XXX_Size() int {
	return xxx_messageInfo_EnvoyVersion.Size(m)
}
func (m *EnvoyVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvoyVersion.DiscardUnknown(m)
}

var xxx_messageInfo_EnvoyVersion proto.InternalMessageInfo

func (m *EnvoyVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *EnvoyVersion) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func init() {
	proto.RegisterType((*DataplaneInsight)(nil), "kuma.mesh.v1alpha1.DataplaneInsight")
	proto.RegisterType((*DataplaneInsight_MTLS)(nil), "kuma.mesh.v1alpha1.DataplaneInsight.MTLS")
	proto.RegisterType((*DiscoverySubscription)(nil), "kuma.mesh.v1alpha1.DiscoverySubscription")
	proto.RegisterType((*DiscoverySubscriptionStatus)(nil), "kuma.mesh.v1alpha1.DiscoverySubscriptionStatus")
	proto.RegisterType((*DiscoveryServiceStats)(nil), "kuma.mesh.v1alpha1.DiscoveryServiceStats")
	proto.RegisterType((*Version)(nil), "kuma.mesh.v1alpha1.Version")
	proto.RegisterType((*KumaDpVersion)(nil), "kuma.mesh.v1alpha1.KumaDpVersion")
	proto.RegisterType((*EnvoyVersion)(nil), "kuma.mesh.v1alpha1.EnvoyVersion")
}

func init() {
	proto.RegisterFile("mesh/v1alpha1/dataplane_insight.proto", fileDescriptor_35794f05b529b342)
}

var fileDescriptor_35794f05b529b342 = []byte{
	// 760 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0xed, 0x4e, 0x13, 0x4b,
	0x18, 0xc7, 0xb3, 0x7d, 0x83, 0x3e, 0x50, 0x0e, 0x67, 0x72, 0x80, 0xd2, 0x9e, 0x93, 0x53, 0x9b,
	0x90, 0xa0, 0x89, 0xbb, 0x41, 0x83, 0x89, 0x21, 0x6a, 0x2c, 0x25, 0x86, 0x88, 0x51, 0xa7, 0xd5,
	0x0f, 0x7c, 0xb0, 0x99, 0xee, 0x0e, 0xdb, 0x91, 0x7d, 0x73, 0x67, 0x5a, 0x25, 0xd1, 0x1b, 0x30,
	0x5e, 0x80, 0x17, 0xc0, 0x15, 0x78, 0x79, 0x7c, 0xd1, 0xcc, 0xec, 0x6c, 0xbb, 0x68, 0x29, 0xf4,
	0x13, 0xec, 0x3e, 0xff, 0xdf, 0xf3, 0xfe, 0x6c, 0x61, 0xcb, 0xa7, 0x7c, 0x60, 0x8d, 0x76, 0x88,
	0x17, 0x0d, 0xc8, 0x8e, 0xe5, 0x10, 0x41, 0x22, 0x8f, 0x04, 0xb4, 0xc7, 0x02, 0xce, 0xdc, 0x81,
	0x30, 0xa3, 0x38, 0x14, 0x21, 0x42, 0xa7, 0x43, 0x9f, 0x98, 0x52, 0x6b, 0xa6, 0xda, 0xda, 0xff,
	0x6e, 0x18, 0xba, 0x1e, 0xb5, 0x94, 0xa2, 0x3f, 0x3c, 0xb1, 0x04, 0xf3, 0x29, 0x17, 0xc4, 0x8f,
	0x12, 0xa8, 0xb6, 0x31, 0x22, 0x1e, 0x73, 0x88, 0xa0, 0x56, 0xfa, 0x4f, 0x62, 0x68, 0x9e, 0xe7,
	0x61, 0xb5, 0x9d, 0x46, 0x3a, 0x4c, 0x02, 0xa1, 0x97, 0x50, 0xe1, 0xc3, 0x3e, 0xb7, 0x63, 0x16,
	0x09, 0x16, 0x06, 0xbc, 0x6a, 0x34, 0xf2, 0xdb, 0x4b, 0xf7, 0x6e, 0x9b, 0x7f, 0x86, 0x36, 0xdb,
	0x8c, 0xdb, 0xe1, 0x88, 0xc6, 0x67, 0x9d, 0x0c, 0x81, 0x2f, 0xf3, 0xe8, 0x11, 0x14, 0xfc, 0xee,
	0x51, 0xa7, 0x9a, 0x6b, 0x18, 0x57, 0xfa, 0xf9, 0x2d, 0x09, 0xf3, 0x45, 0xf7, 0xa8, 0x83, 0x15,
	0x56, 0xfb, 0x69, 0x40, 0x41, 0x3e, 0xa2, 0x63, 0xa8, 0xdb, 0x34, 0x16, 0xec, 0x84, 0xd9, 0x44,
	0xd0, 0x1e, 0xfd, 0x14, 0xb1, 0x98, 0xc8, 0x10, 0x3d, 0x59, 0x70, 0xd5, 0x50, 0xee, 0x6b, 0x66,
	0xd2, 0x0d, 0x33, 0xed, 0x86, 0xd9, 0x4d, 0xbb, 0x81, 0x37, 0x33, 0xf8, 0xc1, 0x98, 0x96, 0x76,
	0xf4, 0x0e, 0xfe, 0xf3, 0x08, 0x17, 0xbd, 0x6c, 0x80, 0x98, 0xba, 0x34, 0xa0, 0x89, 0x48, 0x27,
	0x3f, 0xcb, 0x7b, 0x5d, 0x3a, 0xd8, 0x9f, 0xf0, 0x38, 0x83, 0xa3, 0x3d, 0xd8, 0xbc, 0xca, 0x35,
	0xaf, 0xe6, 0x1b, 0xc6, 0x76, 0x05, 0x57, 0xed, 0xe9, 0x2c, 0x6f, 0x7e, 0xcb, 0xc3, 0xda, 0xd4,
	0x4e, 0xa3, 0x0d, 0xc8, 0x31, 0x47, 0x55, 0x5e, 0x6e, 0x2d, 0x5c, 0xb4, 0x0a, 0x71, 0x6e, 0xd5,
	0xc0, 0x39, 0xe6, 0xa0, 0x16, 0x6c, 0xda, 0x61, 0x20, 0xe2, 0xd0, 0xeb, 0x8d, 0xd7, 0x48, 0x90,
	0xc0, 0xa6, 0x3d, 0xe6, 0xa8, 0x5a, 0x32, 0xfa, 0x75, 0xad, 0x7c, 0xa5, 0x07, 0xa0, 0x74, 0x87,
	0x0e, 0x7a, 0x06, 0xcb, 0x76, 0x18, 0x04, 0xd4, 0x16, 0x49, 0x83, 0xf3, 0xd7, 0xb5, 0xa0, 0xb5,
	0x78, 0xd1, 0x2a, 0xfe, 0x30, 0x72, 0x8b, 0x06, 0x5e, 0xd2, 0xa4, 0x6a, 0xee, 0x3e, 0xfc, 0xe5,
	0xc8, 0xf4, 0x33, 0xbe, 0x0a, 0xd7, 0xb6, 0x73, 0x65, 0x82, 0x28, 0x27, 0xaf, 0xa1, 0xc4, 0x05,
	0x11, 0x43, 0x5e, 0x2d, 0x2a, 0xd6, 0xba, 0xf1, 0x3e, 0x76, 0x14, 0xa6, 0x92, 0xfb, 0x6a, 0xc8,
	0x82, 0xb5, 0x23, 0xb4, 0x0b, 0x0b, 0x23, 0x1a, 0x73, 0x39, 0xde, 0x92, 0xf2, 0x59, 0x9f, 0xe6,
	0xf3, 0x6d, 0x22, 0xc1, 0xa9, 0xb6, 0xf9, 0x3d, 0x0f, 0xf5, 0x19, 0x81, 0x50, 0x1b, 0x56, 0xd5,
	0x2e, 0x0d, 0x23, 0x79, 0x6a, 0x37, 0x5d, 0xce, 0x15, 0xc9, 0xbc, 0x51, 0x88, 0xaa, 0xf7, 0x09,
	0x14, 0x45, 0x28, 0x88, 0x37, 0xf3, 0x6c, 0xc6, 0x59, 0xd0, 0x78, 0xc4, 0x6c, 0x2a, 0x13, 0xe0,
	0x38, 0xe1, 0xd0, 0x1e, 0xe4, 0x6d, 0x87, 0xeb, 0xa9, 0xcd, 0x81, 0x4b, 0x4a, 0xc2, 0xd4, 0xe1,
	0x7a, 0x4c, 0xf3, 0xc0, 0x34, 0x81, 0x3d, 0x27, 0x9d, 0xd3, 0x3c, 0xb0, 0x97, 0xc0, 0xb1, 0xc3,
	0xf5, 0x40, 0xe6, 0x81, 0x63, 0x87, 0x37, 0xcf, 0x8d, 0xec, 0xa5, 0x64, 0xcc, 0x68, 0x0b, 0x56,
	0x62, 0xca, 0xa3, 0x30, 0xe0, 0x94, 0xf7, 0x38, 0x0d, 0x84, 0x1a, 0x49, 0x01, 0x57, 0xc6, 0x6f,
	0x3b, 0x34, 0x10, 0x68, 0x17, 0xd6, 0x27, 0x32, 0x62, 0x9f, 0x06, 0xe1, 0x47, 0x8f, 0x3a, 0x2e,
	0x4d, 0x8e, 0xa6, 0x80, 0xd7, 0xc6, 0xd6, 0xa7, 0x19, 0x23, 0xba, 0x0b, 0x68, 0x82, 0xc5, 0xf4,
	0x3d, 0xb5, 0x05, 0x75, 0x54, 0xeb, 0x0b, 0xf8, 0xef, 0xb1, 0x05, 0x6b, 0x43, 0xf3, 0x33, 0x2c,
	0xe8, 0xad, 0x42, 0x0f, 0xa1, 0x24, 0x4b, 0x6c, 0x47, 0x7a, 0x45, 0x6e, 0x4d, 0xab, 0xf8, 0xb9,
	0x52, 0xa4, 0x8b, 0xa8, 0x01, 0xf4, 0x00, 0x8a, 0x34, 0x18, 0x85, 0x67, 0x7a, 0x43, 0x1a, 0xd3,
	0xc8, 0x03, 0x29, 0x48, 0xc1, 0x44, 0xde, 0xfc, 0x02, 0x95, 0x4b, 0x0e, 0x51, 0x75, 0x72, 0x07,
	0xea, 0x53, 0x32, 0x5e, 0x75, 0xb4, 0x0e, 0x25, 0x97, 0x89, 0x2e, 0x71, 0x93, 0x6f, 0x06, 0xd6,
	0x4f, 0xe8, 0x5f, 0x28, 0xbb, 0x4c, 0xec, 0x87, 0xbe, 0xcf, 0x84, 0x2a, 0xb3, 0x8c, 0x27, 0x2f,
	0xa4, 0xb5, 0x3f, 0x64, 0x9e, 0xd3, 0x26, 0x22, 0xb9, 0xf4, 0x32, 0x9e, 0xbc, 0x68, 0x3e, 0x86,
	0xe5, 0x6c, 0x56, 0x33, 0xa2, 0xff, 0x03, 0x45, 0x85, 0xe9, 0xe0, 0xc9, 0x43, 0xeb, 0xce, 0xf1,
	0xb6, 0xcb, 0xc4, 0x60, 0xd8, 0x37, 0xed, 0xd0, 0xb7, 0x64, 0xcd, 0x83, 0x0f, 0xea, 0x8f, 0x45,
	0x22, 0x66, 0x5d, 0xfa, 0x19, 0xed, 0x97, 0xd4, 0xa1, 0xdd, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff,
	0x81, 0x88, 0x8e, 0x2d, 0x5e, 0x07, 0x00, 0x00,
}
